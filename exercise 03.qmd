---
title: EDA Challanges
format: pdf
editor: visual
---

1\. Load the dataset data-wrangling and assigning the variable 'd'

```{r}
library (tidyverse)
f <- "https://raw.githubusercontent.com/difiore/ada-2024-datasets/main/data-wrangling.csv"
d <- read_csv(f, col_names = TRUE)
attach(d)
names(d)
```

2.  Create new variable BSD

    ```{r}
    d$BSD <- d$ Body_mass_male_mean/ d$Body_mass_female_mean
    print(d)

    ```

3.  Create new variable sex-ratio

    ```{r}
    d$Sex_ratio <- d$ AdultFemale/ d$ AdultMales
    print(d)

    ```

4.  Calculate Diameter of the home range for each species

    ```{r}
    d$home_range_diameter <- 2 * sqrt(d$HomeRange_km2 / pi)
    print(d)
    ```

    5.  Create new variable DI ( Defensibility Index)

    ```{r}
    d$DI <- d$DayLength_km / d$home_range_diameter
    print(d)
    ```

    6.  Create the plot for showing overall relationship between day range length and time spent moving

    ```{r}
    overall_plot <- ggplot(d, aes(x = Move, y = DayLength_km)) +
      geom_point() +
      geom_smooth(method = "lm", se = FALSE, color = "blue") +
      labs(title = "Overall Relationship between Day Range Length and Time Spent Moving",
           x = "Time spent moving",
           y = "Day Range Length")
           print(overall_plot)
    ```

    7.  Create the plot by family

    ```{r}
    family_plot <- ggplot(d, aes(x = Move, y = DayLength_km, color = Family)) +
      geom_point() +
      geom_smooth(method = "lm", se = FALSE, color = "blue") +
      facet_wrap(~Family, scales = "free_y", ncol = 2) +
      labs(title = "Relationship between Day Range Length and Time Spent Moving by Primate Family",
           x = "Time Spent Moving",
           y = "Day Range Length")

    print(family_plot)
    ```

    **No , the species that spend more time moving does not travel farther overall.There is no linear relationship between time spent moving and the day range length, overall .However, when we see the relationship by family, Atelidae, cebidae, and Hylobatidae family shows some degree of linear relationship. Yes, I think we should transform the either of the variables (logarithmic transformation may improve the linearity).**

    8.  Applying logarithmic transformation to both variable

```{r}
  overall_plot <- ggplot(d, aes(x = log(Move), y = log(DayLength_km))) +
    geom_point() +
    geom_smooth(method = "lm", se = FALSE, color = "blue") +
    labs(title = "Overall Relationship between Day Range Length and Time Spent Moving",
         x = "Time Spent Moving",
         y = "Day Range Length")
         print(overall_plot)
         
```

T**he logarithmic scale improved the linearity**

```         
9.  Create the plot to show relationship between day range length and time group size overall
```

```{r}
overall_plot <- ggplot(d, aes(x =MeanGroupSize , y = DayLength_km)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, color = "blue") +
  labs(title = "Overall Relationship",
       x = "Group Size",
       y = "Day length Range")
print(overall_plot)

```

9.  Create the plot by family

```{r}
family_plot <- ggplot(d, aes(x =MeanGroupSize , y = DayLength_km, color = Family)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, color = "blue") +
   facet_wrap(~Family, scales = "free_y", ncol = 2) +
  labs(title = "Relationship by Family",
       x = "Group Size",
       y = "Day Range Length")
print(family_plot)
```

**There is some degree of positive linear relationship between Day range length and time group size overall. In this plot, when relationship is analyzed by family, positive linear relationship is seen among Atelidae, Cebidae, cercopithecidae, hominidae, Indriidae. and Pithecidae, and negative relationship is seen in Hylobatidae family. In my opinion, transformation off data is not required.**

10. Plot the relationship between body size dimorphism and canine dimorphism

```{r}
overall_plot <- ggplot(d, aes(x = BSD, y = Canine_Dimorphism)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, color = "blue") +
  labs(title = "Overall Relationship",
       x = "Body Size Dimorphism",
       y = "Canine Size Dimorphism")
print(overall_plot)
```

**Yes, the taxa with greater size dimorphism also show greater canine dimorphism. There is a linear relationship between body size dimorphism and canine size dimorphism**

11.Plot the relationship between body size dimorphism and canine dimorphism by family

```{r}

family_plot <- ggplot(d, aes(x = BSD, y = Canine_Dimorphism, color = Family)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, color = "blue") +
  facet_wrap(~Family, scales = "free_y", ncol = 2) +
  labs(title = "Relationship by Family",
       x = "Body Size Dimorphism",
       y = "Canine Size Dimorphism")
print(family_plot)
```

**Positive Linear relationship between Body size Dimorphism and canine size Dimorphism is observed among Cebidae, Cercopithecidae, Hominidae,Hylobatidae, Pitheciidae, and Lorisidae family. However, negative linear relationship is observed among Atelidae, Lemuridae, and cheirogalidae family.**

12.Create a new variable named **diet_strategy** that is “frugivore” if fruits make up \>50% of the diet, “folivore” if leaves make up \>50% of the diet, and “omnnivore” if neither of these is true.

```{r}
library(dplyr)
library(ggplot2)


# Creating the new variable diet_strategy
d <- d %>%
  mutate(diet_strategy = case_when(
    Fruit > 50 ~ "frugivore",
    Leaves > 50 ~ "folivore",
    TRUE ~ "omnivore"
  ))

# Updating omnivore category to exclude species where both Fruit and Leaves > 50%
d <- d %>%
  mutate(diet_strategy = case_when(
    diet_strategy == "omnivore" & (is.na(Fruit) | Fruit <= 50) & (is.na(Leaves) | Leaves <= 50) ~ "omnivore",
    TRUE ~ diet_strategy
  ))

# Create boxplots
boxplot_plot <- ggplot(d, aes(x = diet_strategy, y = MeanGroupSize)) +
  geom_boxplot() +
  labs(title = "Boxplots of Group Size for Different Dietary Strategies",
       x = "Dietary Strategy",
       y = "Group Size")
print(boxplot_plot)
```

13. In one line of code, using {dplyr} verbs and the forward pipe (`%>%` or `|>`) operator, do the following:

    ```{r}
    library(dplyr)
    library(readr)
    d <- read_csv(f, col_names = TRUE)
    D <- d %>%
      mutate(Binomial = paste(Genus, Species, sep = " ")) %>%
      select(Binomial, Family, Brain_Size_Species_Mean, Body_mass_male_mean) %>%
      group_by(Family) %>%
      summarize(
        Avg_Brain_size_species_mean = mean(Brain_Size_Species_Mean, na.rm = TRUE),
        Avg_Body_mass_male_mean = mean(Body_mass_male_mean, na.rm = TRUE)
      ) %>%
      arrange(Avg_Brain_size_species_mean)
    D
    ```

<!-- -->

14. Loading my own dataset "Boxplot.csv" and calculating the summary statistics

    ```{r}
    library (tidyverse)
    f <- "Boxplot.csv"
    d <- read_csv(f, col_names = TRUE)
    attach(d)
    names(d)
    nrow(d)
    ncol(d)
    variable_names <- names(d)
    print(variable_names)
    numeric_variables <- names(d)[sapply(d, is.numeric)]
    summary_list <- list()
    for (variable in numeric_variables) {
      num_obs <- sum(!is.na(d[[variable]]))
      mean_val <- mean(d[[variable]], na.rm = TRUE)
      sd_val <- sd(d[[variable]], na.rm = TRUE)
      five_num_summary <- summary(d[[variable]], na.rm = TRUE)
      
      summary_list[[variable]] <- list(
        variable = variable,
        num_obs = num_obs,
        mean_val = mean_val,
        sd_val = sd_val,
        five_num_summary = five_num_summary
      )
    }
    for (variable_summary in summary_list) {
      print(paste("Variable:", variable_summary$variable))
      print(paste("Number of observations:", variable_summary$num_obs))
      print(paste("Mean:", variable_summary$mean_val))
      print(paste("Standard Deviation:", variable_summary$sd_val))
      print("Five-Number Summary:")
      print(variable_summary$five_num_summary)
    }

    ```

15. Ploting box-plot for my own dataset "Boxplot.csv"

    ```{r}
    library(tidyverse)
    f <- "Boxplot.csv"
    d <- read_csv(f, col_names = TRUE)

    ggplot(d, aes(x = as.factor(Frequency), y = Absorbance, fill = Group)) +
      geom_boxplot(width = 0.7, outlier.shape = NA, na.rm = TRUE) +
      labs(x = "Frequency in Hz", y = "MEPA Delay Value", 
           title = "EHF Loss vs EHF Normal MEPA Delay across frequencies") +
      theme_classic() +
      ylim(0, 1)
    ```
